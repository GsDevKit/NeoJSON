(name 'Neo-JSON-Core-dkh.31' message 'tests should be green now ...' id '50a08add-a37e-412c-ac3a-1f2ece1212f2' date '11/22/2014' time '09:52:41' author 'dkh' ancestors ((name 'Neo-JSON-Core-dkh.30' message 'move some methods to GsSqueakCommon ... tweak baseline' id 'e3ed0d1f-578b-4ca4-82f5-9649a31d7562' date '11/21/2014' time '21:39:49' author 'dkh' ancestors ((name 'Neo-JSON-Core-PaulDeBruicker.29' message 'All tests but one pass. GemStone does not treat Strings and Symbols that are made up of the same characters as equal.  So there may be issues because of that but things seem to work' id '9b3a8d41-6da7-404c-9dd3-b2c4e1820c12' date '11/02/2014' time '19:55:39' author 'PaulDeBruicker' ancestors ((name 'Neo-JSON-Core-PaulDeBruicker.28' message 'stashing changes because I just found the other gemstone port' id 'f84c7c06-f798-44bd-8ec2-1aca0b57e049' date '11/02/2014' time '19:06:46' author 'PaulDeBruicker' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.27' message 'Added NeoJSONWriter>>#newline to write an end of line on the wrapped stream depending on the #newLine: setting' id '5a262fd6-a42d-4102-b554-26e4f1eade3d' date '04/17/2014' time '12:12:47' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.26' message 'Added new feature NeoJSONWriter>>#nextPutAs: symmetrical to NeoJSONReader>>#next:as: More specifically NeoJSONPropertyMapping>>#writeObjectOn: now respects the valueSchema if it exists using NeoJSONStreamingWriter>>#writeKey:value:as: and NeoJSONWriter>>#encodeKey:value:as:Made both the reader and writer blocks in NeoJSONCustomMapping optional with a fallback to default behaviorRefactoring: added NeoJSONMapping abstract superclass above NeoJSONObjectMapping and NeoJSONCustomMapping to better clarify the design' id '41d2075d-bca4-4c08-bdf8-ed0c8da9bcf2' date '03/24/2014' time '12:18:21' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.25' message 'Added basic support for mapping using inheritance when using #neoJonMapping : (see #testObject3)Renamed #new[Custom|Object]MappingFor: to [custom|object]MappingFor: to better reflect the new behaviorThanks  Philippe Back for making these suggestions!' id '3051cd7d-a857-4aee-b5ba-d56a4085517b' date '03/22/2014' time '11:03:31' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.24' message 'New feature: NeoJSONWriter>>#asciiOnly: to escape all non ASCII characters in strings' id '9f2d3ef6-abbb-46c1-bce7-95a6bd8b4954' date '09/03/2013' time '12:21:28' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.23' message 'Added NeoJSONCustomMapping>>#mapWithValueSchema:' id '6d0d538b-6fb1-41ac-92ee-05721924c5c4' date '08/30/2013' time '11:09:17' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.22' message 'Fix more double dots in the source code of #printOn: that hampered Gemstone compatibility (thx Sebastian Heidbrink)' id 'd15895fc-5743-4ec8-b99f-76fa5f72baf4' date '07/04/2013' time '07:25:56' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.21' message 'Fix a double dot in the source code of NeoJSONCustomWrapper>>#printOn: that hampered Gemstone compatibility (thx Sebastian Heidbrink)' id '3fcb3755-32a9-4c17-ac08-6721bf37a301' date '07/04/2013' time '06:41:52' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.20' message 'Added NeoJSONReader>>#atEnd' id 'afd8e136-e594-4bef-ad4b-7d3bc48fc36e' date '03/06/2013' time '03:24:11' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.19' message 'added NeoJSONWriter>>#newLine: to customize the end of line convention when pretty printing' id 'bf3e7e59-8300-44a6-889e-1f866c8d2977' date '12/10/2012' time '05:11:36' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.18' message 'minor refactoring using #peekFor:' id 'e1330b1e-87f4-4ea3-b81c-5deb03652c0d' date '12/03/2012' time '11:10:22' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.17' message 'modified by accident, not really changed' id 'a18f519f-c220-4ea1-a6bb-163e2c70eab7' date '06/14/2012' time '10:01:07' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.16' message 'documented the character stream API being used' id '5ba3bcd2-e7a6-4b07-91af-af04c7f98624' date '06/13/2012' time '04:29:08' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.15' message 'bugfix in NeoJSONReader>>#match:do:added examples to class comments' id '89ad4ee7-3035-43af-9d5c-cbbef6bcb3f0' date '06/13/2012' time '02:58:00' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.14' message 'extended NeoJSONReader with settable listClass and mapClass as well as a propertyNamesAsSymbols optionextended class and method comments' id '3f749c2c-b53b-4d56-bb65-bfe964b5a69b' date '06/13/2012' time '11:56:19' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.13' message 'made NeoJSONReader>>parseNumberInteger more strict' id '5233f22a-8653-43c2-8651-bf5fa274b3da' date '06/12/2012' time '04:19:27' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.12' message 'introduced some custom exceptions' id 'bb6ec6aa-4e5d-4fac-9aa4-629ea6f068b6' date '06/12/2012' time '03:57:32' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.11' message 'major simplification: removed NeoJSON[Composite|List|Map]Mapping, all to be handled by blocks in NeoJSONCustomMappingrenamed forCustom:do: to for:customDo:accessor based mapping to NeoJSONObjectMapping' id '82a72131-e968-4ffe-af32-60085b4ecc67' date '06/12/2012' time '01:36:03' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.10' message 'optimized NeoJSONWriter>>#encodeChar: to do minimal work' id 'a684bb8c-d2d0-4a4b-8af2-da24c3f5fda4' date '06/10/2012' time '09:27:46' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.9' message 'added NeoJSONTestObject1 with class side #neoJsonMapping: method' id '49129177-ee36-4e4b-890e-314e92f23d76' date '06/09/2012' time '06:56:12' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.8' message 'added custom mapping' id 'b02af4e3-7a91-471f-81a0-57db8b43a87d' date '06/08/2012' time '10:09:41' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.7' message 'adding valueSchema to propertyMapping' id '61c29ad0-e2a6-40af-8360-24952a5e6633' date '06/08/2012' time '20:35:55' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.6' message '1st version where list mapping works on some simple examples' id 'e3250e47-9c16-461e-8d2e-e8031e4cc2be' date '06/08/2012' time '16:40:26' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.5' message 'introduced NeoJSONMapper1st simplified version of NeoJSONReader>>#nextAs:' id '8a4a2338-c728-4ec5-bae9-8232abd6d7f6' date '06/07/2012' time '15:52:29' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.4' message '1st version with working object mapping for writer' id '0208c7c7-3ab1-4081-9061-9c6ca9d7e7cf' date '06/06/2012' time '20:47:04' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.3' message 'added more tests and a simple benchmark' id '2567c409-eb97-428e-a865-e6d078d23dff' date '06/04/2012' time '18:52:34' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.2' message 'first simple version of NeoJSONWriter' id '7e6474b7-70ed-4cb0-8348-05adddc17853' date '06/03/2012' time '19:57:41' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Core-SvenVanCaekenberghe.1' message 'first simple version of NeoJSONReader' id 'e0039613-c57d-47ae-8838-db64917ca722' date '06/02/2012' time '21:59:42' author 'SvenVanCaekenberghe' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())